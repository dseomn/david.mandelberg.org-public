{#
 # SPDX-FileCopyrightText: 2025 David Mandelberg <david@mandelberg.org>
 #
 # SPDX-License-Identifier: Apache-2.0
 #}

{% set fonts = ginjarator.py.import_("dseomn_website.fonts") %}

{% import "include/cache_buster.ninja.jinja" as cache_buster %}

{{ cache_buster.rules }}

rule font_subset
  command = fonttools subset $
    --unicodes=$unicodes $
    --no-ignore-missing-unicodes $
    --output-file=$out $
    --flavor=woff2 $
    --layout-features='*' $
    $in
  description = SUBSET $in

{% for font in fonts.FONTS %}
build {{ ginjarator.to_ninja(font.work_path) }}: $
    font_subset {{ ginjarator.to_ninja(font.source) }}
  unicodes = {{ ginjarator.to_ninja(font.unicodes, escape_shell=true) }}
{{ cache_buster.hash(
  input_dir=font.work_path.parent | string,
  input_filename=font.work_path.name,
  work_dir=font.work_path.parent | string,
) }}
{{ cache_buster.copy(
  input_dir=font.work_path.parent | string,
  input_filenames=(font.work_path.name,),
  work_dir=font.work_path.parent | string,
  work_filename_base=font.work_path.name,
) }}
{% endfor %}

rule lessc
  # TODO: https://github.com/less/less.js/issues/2925 - Run lessc once.
  command = lessc --depends $in $out > $out.d && lessc $in $out
  depfile = $out.d
  description = LESSC $in

rule postcss
  command = postcss $in --config css > $out
  description = POSTCSS $in

rule minify
  command = minify --output $out --quiet --type=css $in
  description = MINIFY $in

build work/css/compiled.css | work/css/compiled.css.d: lessc $
    css/main.less $
    || $
    {{ ginjarator.to_ninja(
      ginjarator.paths.template_render_stamp("css/common.less.jinja")
    ) }}
build work/css/postcss.css: postcss work/css/compiled.css | css/postcss.config.js
build work/css/main.css: minify work/css/postcss.css
{{ cache_buster.hash(
  input_dir="work/css",
  input_filename="main.css",
  work_dir="work/css",
) }}
{{ cache_buster.copy(
  input_dir="work/css",
  input_filenames=("main.css",),
  work_dir="work/css",
  work_filename_base="main.css",
) }}
