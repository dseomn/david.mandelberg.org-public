{#
 # SPDX-FileCopyrightText: 2025 David Mandelberg <david@mandelberg.org>
 #
 # SPDX-License-Identifier: Apache-2.0
 #}

{% set tomllib = ginjarator.py.import_("tomllib") %}

{% set headings = ginjarator.py.import_("dseomn_website.headings") %}

{% import "include/base_html.html.jinja" as base_html %}

{% set site_metadata = tomllib.loads(
  ginjarator.fs.read_text("include/site_metadata.toml")
) %}

{% macro standalone(
  url_path,
  title
) %}
  {% set fragment %}
    <article class="article">
      <h1>{{ title | e }}</h1>
      {{ caller() }}
    </article>
  {% endset %}
  {% call base_html.write(url_path=url_path, title=title) %}
    {{ headings.article(fragment) }}
  {% endcall %}
{% endmacro %}

{% macro _post_fragment(
  metadata,
  link,
  contents
) %}
  <article class="article">
    <header class="article-header">
      <h1 class="article-header-title">
        {% if link is none %}
          {{ metadata.title | e }}
        {% else %}
          <a rel="bookmark" href="{{ link | e }}">{{ metadata.title | e }}</a>
        {% endif %}
      </h1>
      <p class="article-header-metadata">
        Posted on
        <time>
          {{ metadata.published.isoformat(sep=" ", timespec="seconds") | e }}
        </time>
        by {{ metadata.author | e }}.
      </p>
    </header>
    {{ contents }}
  </article>
{% endmacro %}

{% macro post() %}
  {% set metadata = tomllib.loads(
    ginjarator.fs.read_text(
      ginjarator.current_template.parent / "metadata.toml"
    )
  ) %}
  {% do metadata.setdefault("author", site_metadata.author) %}
  {% do ginjarator.py.assert_(
    metadata.keys() <= {
      "published": none,
      "title": none,
      "author": none,
    }.keys()
  ) %}
  {% set source_dir_name = ginjarator.current_template.parent.name %}
  {% set source_dir_date_prefix = metadata.published.strftime("%Y-%m-%d-") %}
  {% do ginjarator.py.assert_(
    source_dir_name.startswith(source_dir_date_prefix)
  ) %}
  {% set slug = source_dir_name.removeprefix(source_dir_date_prefix) %}
  {% set url_path = metadata.published.strftime("/%Y/%m/%d/") + slug + "/" %}
  {% set work_path = "work/posts/" + source_dir_name %}
  {% set contents = caller() %}
  {% call base_html.write(url_path=url_path, title=metadata.title) %}
    {{ headings.article(
      _post_fragment(
        metadata=metadata,
        link=none,
        contents=contents,
      ),
    ) }}
  {% endcall %}
  {% do ginjarator.fs.write_text(
    work_path + "/include-fragment.html",
    headings.article(
      _post_fragment(
        metadata=metadata,
        link=url_path,
        contents=contents,
      ),
      offset=1,
    ),
  ) %}
{% endmacro %}
