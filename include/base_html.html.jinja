{#
 # SPDX-FileCopyrightText: 2025 David Mandelberg <david@mandelberg.org>
 #
 # SPDX-License-Identifier: Apache-2.0
 #}

{% set subprocess = ginjarator.py.import_("subprocess") %}

{% set lint = ginjarator.py.import_("dseomn_website.lint") %}
{% set metadata = ginjarator.py.import_("dseomn_website.metadata") %}
{% set paths = ginjarator.py.import_("dseomn_website.paths") %}

{% import "include/media.jinja" as media %}

{% macro minify(html) %}
  {{- subprocess.run(
    ("minify", "--type=html"),
    input=html,
    stdout=subprocess.PIPE,
    check=true,
    text=true,
  ).stdout -}}
{% endmacro %}

{% macro blog_list_link(list_metadata, link_text) %}
  <a href="{{ list_metadata.url_path | e }}">{{ link_text | e }}</a>
  (<a href="{{ list_metadata.feed_url_path | e }}">feed</a>)
{% endmacro %}

{% macro write(
  page_metadata,
  site_title_is_h1=false,
  extra_head=''
) %}
  {% set contents -%}
    <!doctype html>
    <html
        dir="{{ metadata.SITE.direction | e }}"
        lang="{{ metadata.SITE.language | e }}"
        >
      <head>
        <meta charset="utf-8">
        <title>{{ page_metadata.full_title | e }}</title>
        <meta name="viewport" content="width=device-width">
        <meta
            property="og:locale"
            content="{{ metadata.SITE.language.replace("-", "_") | e }}"
            >
        <meta property="og:site_name" content="{{ metadata.SITE.title | e }}">
        <meta property="og:title" content="{{ page_metadata.title | e }}">
        <meta property="og:url" content="{{ page_metadata.url | e }}">
        {% set main_css = ginjarator.fs.read_text(
          "work/css/main.css.cache-buster"
        ) %}
        {% if main_css is not none %}
          <link rel="stylesheet" href="{{ paths.to_url_path(main_css) | e }}">
        {% endif %}
        {% call(url_path, image_metadata) media.image_for_each(
          media.favicon,
          conversions=media.image_profiles.favicon,
        ) %}
          {% set geometry = image_metadata.geometry %}
          <link
              rel="icon"
              href="{{ url_path | e }}"
              type="{{ image_metadata.mimeType | e }}"
              sizes="{{ geometry.width }}x{{ geometry.height }}"
              >
        {% endcall %}
        {{ extra_head }}
      </head>
      <body>
        <header class="site-header">
          <div class="site-header-inner">
            {% if site_title_is_h1 %}
              <h1 class="h1 site-header-title">
                {{ metadata.SITE.title | e }}
              </h1>
            {% else %}
              <p class="h1 site-header-title">{{ metadata.SITE.title | e }}</p>
            {% endif %}
            <nav>
              <ul class="site-header-nav-list">
                {% for nav_metadata in metadata.MAIN_NAV %}
                  {% if nav_metadata.url_path == page_metadata.url_path %}
                    <li aria-current="page">{{ nav_metadata.title | e }}</li>
                  {% else %}
                    <li>
                      <a href="{{ nav_metadata.url_path | e }}">
                        {{ nav_metadata.title | e }}
                      </a>
                    </li>
                  {% endif %}
                {% endfor %}
              </ul>
            </nav>
          </div>
        </header>
        <main>
          {{ caller() }}
        </main>
        <footer class="site-footer">
          <ul class="site-footer-list">
            <li class="site-footer-list-item">
              {{ blog_list_link(
                metadata.BLOG_MAIN_LIST,
                link_text=metadata.BLOG_MAIN_LIST.title,
              ) }}
              <ul>
                {% for tag, list_metadata in metadata.BLOG_TAG_LISTS.items() %}
                  <li>{{ blog_list_link(list_metadata, link_text=tag) }}</li>
                {% endfor %}
              </ul>
            </li>
            {% for standalone_metadata in metadata.STANDALONE_PAGES.values() %}
              <li class="site-footer-list-item">
                <a href="{{ standalone_metadata.url_path | e }}">
                  {{ standalone_metadata.title | e }}
                </a>
              </li>
            {% endfor %}
          </ul>
        </footer>
      </body>
    </html>
  {% endset %}

  {% set minified = minify(contents) %}
  {% do lint.html(minified) %}
  {% do ginjarator.fs.write_text(
    paths.from_url_path(page_metadata.url_path),
    minified,
  ) %}
{% endmacro %}
