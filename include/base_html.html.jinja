{#
 # SPDX-FileCopyrightText: 2025 David Mandelberg <david@mandelberg.org>
 #
 # SPDX-License-Identifier: Apache-2.0
 #}

{% set subprocess = ginjarator.py.import_("subprocess") %}

{% set headings = ginjarator.py.import_("dseomn_website.headings") %}
{% set paths = ginjarator.py.import_("dseomn_website.paths") %}

{% import "include/media.jinja" as media %}

{% set site_title = "David Mandelberg" %}

{% macro write(
  url_path,
  title
) %}
  {% set contents -%}
    <!doctype html>
    <html dir="ltr" lang="en-US">
      <head>
        <meta charset="utf-8">
        <title>
          {{- (title, site_title) | reject("none") | join(" â€” ") | e -}}
        </title>
        <meta name="viewport" content="width=device-width">
        {% set main_css = ginjarator.fs.read_text(
          "work/css/main.css.cache-buster"
        ) %}
        {% if main_css is not none %}
          <link rel="stylesheet" href="{{ paths.to_url_path(main_css) | e }}">
        {% endif %}
        {% call(url_path, metadata) media.image_for_each(
          media.favicon,
          conversions=media.image_profiles.favicon,
        ) %}
          {% set geometry = metadata.geometry %}
          <link
              rel="icon"
              href="{{ url_path | e }}"
              type="{{ metadata.mimeType | e }}"
              sizes="{{ geometry.width }}x{{ geometry.height }}"
              >
        {% endcall %}
      </head>
      <body>
        <header class="site-header">
          <div class="site-header-inner">
            {% if url_path == "/" %}
              {% do ginjarator.py.assert_(title is none) %}
              <h1 class="h1 site-header-title">{{ site_title | e }}</h1>
            {% else %}
              {% do ginjarator.py.assert_(title is not none) %}
              <p class="h1 site-header-title">
                <a href="/">{{ site_title | e }}</a>
              </p>
            {% endif %}
            <nav>
              <ul class="site-header-nav-list">
                {% for nav_url_path, nav_title in (
                  ("/about/", "About"),
                ) %}
                  {% if nav_url_path == url_path %}
                    {% do ginjarator.py.assert_(nav_title == title) %}
                    <li>{{ nav_title | e }}</li>
                  {% else %}
                    <li>
                      <a href="{{ nav_url_path | e }}">{{ nav_title | e }}</a>
                    </li>
                  {% endif %}
                {% endfor %}
              </ul>
            </nav>
          </div>
        </header>
        <main>
          {{ caller() }}
        </main>
      </body>
    </html>
  {% endset %}

  {% set minified = subprocess.run(
    ("minify", "--type=html"),
    input=contents,
    stdout=subprocess.PIPE,
    check=true,
    text=true,
  ).stdout %}
  {% do headings.lint(minified) %}
  {% do ginjarator.fs.write_text(paths.from_url_path(url_path), minified) %}
{% endmacro %}
