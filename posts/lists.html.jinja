{#
 # SPDX-FileCopyrightText: 2025 David Mandelberg <david@mandelberg.org>
 #
 # SPDX-License-Identifier: Apache-2.0
 #}

{% set subprocess = ginjarator.py.import_("subprocess") %}

{% set metadata = ginjarator.py.import_("dseomn_website.metadata") %}
{% set pagination = ginjarator.py.import_("dseomn_website.pagination") %}
{% set paths = ginjarator.py.import_("dseomn_website.paths") %}

{% import "include/base_html.html.jinja" as base_html %}

{% set posts_per_page = 10 %}
{% set posts_per_feed = 20 %}

{% macro page_url_path(list_url_path, page_number) %}
  {{- list_url_path -}}
  {%- if page_number != 1 -%}
    page/{{ page_number }}/
  {%- endif -%}
{% endmacro %}

{% macro pagination_prev_next(
  list_url_path,
  target,
  total,
  box_class,
  rel,
  label,
  text
) %}
  {% set contents %}
    <span aria-label="{{ label | e }}" role="img">{{ text | e }}</span>
  {% endset %}
  {% if 1 <= target <= total %}
    <li class="{{ box_class | e}}">
      <a
          class="pagination-item pagination-item-page"
          href="{{ page_url_path(list_url_path, target) | e }}"
          rel="{{ rel | e }}"
          >
        {{ contents }}
      </a>
    </li>
  {% else %}
    <li class="{{ box_class | e}} pagination-item-box-hidden">
      <span class="pagination-item pagination-item-page">
        {{ contents }}
      </span>
    </li>
  {% endif %}
{% endmacro %}

{% macro pagination_nav(list_url_path, current, total, link_by_year) %}
  <nav class="pagination-nav">
    <ol class="pagination-list">
      {{ pagination_prev_next(
        list_url_path=list_url_path,
        target=current - 1,
        total=total,
        box_class="pagination-item-box-prev",
        rel="prev",
        label="previous page",
        text="←",
      ) }}
      {% for page in pagination.nav(current=current, total=total) %}
        {% if page is none %}
          <li>
            <span class="pagination-item pagination-item-ellipsis">…</span>
          </li>
        {% elif page == current %}
          <li>
            <span
                aria-current="page"
                class="pagination-item pagination-item-page"
                >
              {{ page }}
            </span>
          </li>
        {% else %}
          <li>
            <a
                class="pagination-item pagination-item-page"
                href="{{ page_url_path(list_url_path, page) | e }}"
                >
              {{ page }}
            </a>
          </li>
        {% endif %}
      {% endfor %}
      {{ pagination_prev_next(
        list_url_path=list_url_path,
        target=current + 1,
        total=total,
        box_class="pagination-item-box-next",
        rel="next",
        label="next page",
        text="→",
      ) }}
    </ol>
    {% if link_by_year | length > 1 %}
      <ol class="pagination-list">
        {% for year, link in link_by_year | dictsort(reverse=true) %}
          {% if not loop.first and loop.previtem[0] != year + 1 %}
            <li>
              <span class="pagination-item pagination-item-ellipsis">…</span>
            </li>
          {% endif %}
          <li>
            <a
                class="pagination-item pagination-item-jump"
                href="{{ link | e }}"
                >
              <time>{{ year | e }}</time>
            </a>
          </li>
        {% endfor %}
      </ol>
    {% endif %}
  </nav>
{% endmacro %}

{#
 # Map from info about a blog post list to the list of post metadata in it. The
 # info is (url path, list title).
 #}
{% set lists = {} %}
{% set post_uuids = [] %}
{% for template_path in ginjarator.fs.read_config().templates
  if template_path.is_relative_to("posts")
  and (template_path | string) != "posts/lists.html.jinja"
%}
  {% set post_metadata = metadata.Post.load(template_path) %}
  {% do ginjarator.py.assert_(post_metadata.uuid not in post_uuids) %}
  {% do post_uuids.append(post_metadata.uuid) %}
  {% do lists.setdefault(("/", "Blog"), []).append(post_metadata) %}
  {% for tag in post_metadata.tags %}
    {% do lists
      .setdefault(("/tag/" + tag + "/", "Tag: " + tag), [])
      .append(post_metadata)
    %}
  {% endfor %}
{% endfor %}

{% for (list_url_path, list_title), list_posts in lists.items() %}
  {% set feed_url_path = list_url_path + "feed/" %}
  {% set posts_by_page = (
    list_posts |
    sort(reverse=true, attribute="published") |
    batch(posts_per_page) |
    list
  ) %}

  {# Map from year to top-most post from that year. #}
  {% set link_by_year = {} %}
  {% for page_posts in posts_by_page %}
    {% set page_loop = loop %}
    {% for post_metadata in page_posts %}
      {% do link_by_year.setdefault(
        post_metadata.published.year,
        page_url_path(list_url_path, page_loop.index) + "#" + post_metadata.id,
      ) %}
    {% endfor %}
  {% endfor %}

  {% for page_posts in posts_by_page %}
    {% set extra_head %}
      <link
          href="{{ feed_url_path | e }}"
          rel="alternate"
          type="application/atom+xml"
          >
    {% endset %}
    {% set show_list_title = list_url_path != "/" %}
    {% call base_html.write(
      page_metadata=metadata.Page(
        url_path=page_url_path(list_url_path, loop.index),
        title=list_title + (
          "" if loop.index == 1 else " (page " + loop.index | string + ")"
        ),
      ),
      site_title_is_h1=not show_list_title,
      extra_head=extra_head,
    ) %}
      {% if show_list_title or not loop.first %}
        <header class="list-header">
          {% if show_list_title %}
            <h1 class="h1 list-header-title">{{ list_title | e }}</h1>
          {% endif %}
          {% if not loop.first %}
            {{ pagination_nav(
              list_url_path=list_url_path,
              current=loop.index,
              total=loop.length,
              link_by_year={},
            ) }}
          {% endif %}
        </header>
      {% endif %}
      {% for post_metadata in page_posts %}
        {{ ginjarator.fs.read_text(post_metadata.include_fragment_path) }}
      {% endfor %}
      {% if loop.length > 1 %}
        <footer class="list-footer">
          {{ pagination_nav(
            list_url_path=list_url_path,
            current=loop.index,
            total=loop.length,
            link_by_year=link_by_year,
          ) }}
        </footer>
      {% endif %}
    {% endcall %}
  {% endfor %}

  {% set feed_posts = (
    list_posts |
    sort(reverse=true, attribute="published")
  )[:posts_per_feed] %}
  {% set feed -%}
    <?xml version="1.0" encoding="utf-8"?>
    <feed
        xml:base="{{ metadata.SITE.url | e }}"
        xml:lang="{{ metadata.SITE.language | e }}"
        xmlns="http://www.w3.org/2005/Atom"
        >
      <author><name>{{ metadata.SITE.author | e }}</name></author>
      <id>{{ metadata.SITE.url | e }}{{ list_url_path | e }}</id>
      <link href="{{ list_url_path | e }}" rel="alternate"/>
      <link href="{{ feed_url_path | e }}" rel="self"/>
      <title>{{ list_title | e }} — {{ metadata.SITE.title | e }}</title>
      <updated>{{ (feed_posts | first).published.isoformat() | e }}</updated>
      {% for post_metadata in feed_posts %}
        {{ ginjarator.fs.read_text(post_metadata.atom_fragment_path) }}
      {% endfor %}
    </feed>
  {% endset %}
  {% set feed_minified = subprocess.run(
    ("minify", "--type=xml"),
    input=feed,
    stdout=subprocess.PIPE,
    check=true,
    text=true,
  ).stdout %}
  {% do ginjarator.fs.write_text(
    paths.from_url_path(feed_url_path, dir_index="index.xml"),
    feed_minified,
  ) %}
{% endfor %}
